name: Documentation
on:
  push:
    branches:
      - 'main'
    paths:
      - 'packages/*/src/**'
      - '!packages/create-discord-bot/**'
      - '!packages/proxy-container/**'
      - '!packages/ui/**'
    tags:
      - '**'
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch, tag or SHA to checkout'
        required: true
      ref_type:
        type: choice
        description: 'Branch or tag'
        options:
          - branch
          - tag
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  build-docs:
    name: Build & upload documentation
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    if: github.repository_owner == 'discordjs'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref || '' }}

      - name: Install node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        uses: ./packages/actions/src/pnpmCache

      - name: Build dependencies
        run: pnpm run build

      - name: Build docs
        run: pnpm run docs

      - name: Checkout docs repository
        uses: actions/checkout@v3
        with:
          repository: 'discordjs/docs'
          token: ${{ secrets.DJS_DOCS }}
          path: 'out'

      - name: Extract package and semver from tag
        if: ${{ github.ref_type == 'tag' }}
        id: extract-tag
        uses: ./packages/actions/src/formatTag
        with:
          tag: ${{ github.ref_name }}

      - name: Upload documentation to database
        if: ${{ github.ref_type == 'tag' }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        uses: ./packages/actions/src/uploadDocumentation
        with:
          package: ${{ steps.extract-tag.outputs.package }}
          version: ${{ steps.extract-tag.outputs.semver }}

      - name: Move docs to correct directory
        if: ${{ github.ref_type == 'tag' }}
        env:
          PACKAGE: ${{ steps.extract-tag.outputs.package }}
          SEMVER: ${{ steps.extract-tag.outputs.semver }}
        run: |
          mkdir -p "out/${PACKAGE}"
          if [[ "${PACKAGE}" == "discord.js" ]]; then
            mv "packages/${PACKAGE}/docs/docs.json" "out/${PACKAGE}/${SEMVER}.json"
            mv "packages/${PACKAGE}/docs/docs.api.json" "out/${PACKAGE}/${SEMVER}.api.json"
          else
            mv "packages/${PACKAGE}/docs/docs.api.json" "out/${PACKAGE}/${SEMVER}.api.json"
          fi

      - name: Upload documentation to database
        if: ${{ github.ref_type == 'branch' }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        uses: ./packages/actions/src/uploadDocumentation

      - name: Move docs to correct directory
        if: ${{ github.ref_type == 'branch' }}
        run: |
          declare -a PACKAGES=("brokers" "builders" "collection" "core" "discord.js" "formatters" "next" "proxy" "rest" "util" "voice" "ws")
          for PACKAGE in "${PACKAGES[@]}"; do
            if [[ "${PACKAGE}" == "discord.js" ]]; then
              mkdir -p "out/${PACKAGE}"
              mv "packages/${PACKAGE}/docs/docs.json" "out/${PACKAGE}/${GITHUB_REF_NAME}.json"
              mv "packages/${PACKAGE}/docs/docs.api.json" "out/${PACKAGE}/${GITHUB_REF_NAME}.api.json"
            else
              mkdir -p "out/${PACKAGE}"
              mv "packages/${PACKAGE}/docs/docs.api.json" "out/${PACKAGE}/${GITHUB_REF_NAME}.api.json"
            fi
          done

      - name: Commit and push
        run: |
          cd out
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "Docs build for ${GITHUB_REF_TYPE} ${GITHUB_REF_NAME}: ${GITHUB_SHA}" || true
          git push

  build-indices:
    needs: build-docs
    name: Build & upload search indices
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    if: github.repository_owner == 'discordjs'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        uses: ./packages/actions/src/pnpmCache

      - name: Build dependencies
        run: pnpm run build

      - name: Upload search indices to meilisearch
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEARCH_API_URL: ${{ secrets.SEARCH_API_URL }}
          SEARCH_API_KEY: ${{ secrets.SEARCH_API_KEY }}
        uses: ./packages/actions/src/uploadSearchIndices

  deploy-website:
    needs: build-docs
    name: Deploy website
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    if: github.repository_owner == 'discordjs'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build & deploy website
        uses: BetaHuhn/deploy-to-vercel-action@643bc80032ba62ca41d1a9aaba7b38b51c2b8646
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_SCOPE: 'discordjs'
          GITHUB_DEPLOYMENT_ENV: 'Production â€“ discord-js'
          PRODUCTION: true
